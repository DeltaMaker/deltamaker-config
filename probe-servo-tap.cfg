#
# Date: 9/18/2023
#
# DeltaMaker Bed Mesh and Probe config: probe-servo-tap.cfg
#
# Use the nozzle as the probe. 
# Hotend rides on linear rail, with micro switch as probe
# Maximum probing temp 

##### INITIALIZATION #####
[delayed_gcode STARTUP_INIT]
initial_duration: 1
gcode:
   SET_PIN PIN=probe_power_pin VALUE=1 	# power on probe at startup
   # Probing the bed may occur only when nozzle temperature is not above 50
   SET_GCODE_VARIABLE MACRO=AUTO_BED_MAPPING VARIABLE=max_temp VALUE=50


##### TOUCH PROBE - Hotend mounted to servo tap probe #####
[probe]
speed: 6
x_offset: 0
y_offset: 0
activate_gcode:
   ACTIVATE_PROBE
deactivate_gcode:
   DEACTIVATE_PROBE

##### BED MESH LEVELING #####
[bed_mesh]
speed: 250
horizontal_move_z: 15

###round_probe_count: 7
###relative_reference_index: 14

round_probe_count: 5
relative_reference_index: 6

#round_probe_count: 3
#relative_reference_index: 2

##### NOZZLE LIFT SERVO #####
# Uses HiTec nano servo HS-40
[servo nozzle_lift]
pin: gpio22   # PROBE on skr-pico board (configurable pwm output)
minimum_pulse_width: 0.000615
maximum_pulse_width: 0.002495


[gcode_macro ACTIVATE_PROBE]
variable_state: 0
gcode:
   {% set svv = printer.save_variables.variables %}
   {% set state = svv.get("nozzle_lift_state", 0) %}
   {% if state == 0 %}
      NOZZLE_LIFT_CALIBRATE START=1
   {% endif %}
   #SET_NOZZLE_LIFT ANGLE=state.min_trig}
   #SET_NOZZLE_LIFT ANGLE=0
   SET_NOZZLE_LIFT ANGLE={state.min_open}
   SET_NOZZLE_LIFT ANGLE={state.max_open}
   G4 P100

[gcode_macro DEACTIVATE_PROBE]
gcode:
   SET_NOZZLE_LIFT ANGLE=0
   DEACTIVATE_SERVO

[gcode_macro lift_nozzle]
gcode:
   SET_NOZZLE_LIFT ANGLE=180
   #DEACTIVATE_SERVO
   
[gcode_macro lower_nozzle]
gcode:
   SET_NOZZLE_LIFT ANGLE=0
   #DEACTIVATE_SERVO
   
[gcode_macro SET_NOZZLE_LIFT]
variable_last_angle: 0
gcode:
   {% set servo = params.SERVO|default("nozzle_lift") %}
   {% set angle = params.ANGLE|default(last_angle)|int %}
   SET_SERVO SERVO={servo} ANGLE={angle}
   
   # calculate delay time based on distance rotated.
   # estimate 6ms per degree of rotation
   {% set millis = 6 * (last_angle - angle)|abs %}
   G4 P{millis}
   M118 // SET_NOZZLE_LIFT angle={angle} ms={millis}
   SET_SERVO SERVO={servo} WIDTH=0
   SET_GCODE_VARIABLE MACRO=SET_NOZZLE_LIFT VARIABLE=last_angle VALUE={angle}
   QUERY_PROBE
 
[gcode_macro DEACTIVATE_SERVO]
gcode:
   {% set servo = params.SERVO|default("nozzle_lift") %}
   SET_SERVO SERVO={servo} WIDTH=0
 
[delayed_gcode NOZZLE_LIFT_LOOP]
initial_duration: 0
gcode:
   QUERY_PROBE
   NOZZLE_LIFT_CALIBRATE

[gcode_macro NOZZLE_LIFT_CALIBRATE]
variable_state: {'min_open': 0, 'max_open': 0, 'min_trig': 180, 'max_trig': 180}
variable_angle: 180
variable_phase: 0
gcode:
    M118 // NOZZLE_LIFT_CALIBRATE: phase={phase} angle={angle} state={state}
   {% set running = 1 %}
   {% set limit = params.LIMIT|default(5)|int %}
   {% set start = params.START|default(0)|int %}
   {% set query = printer.probe.last_query|int %}
   {% if start == 1 %}
      M118 // Begin Lift calibration
      {% set phase = 1 %}
      {% set state = {'min_open': 0, 'max_open': 0, 'min_trig': 180, 'max_trig': 180} %}
      {% set angle = 180 %}

   ##### Perform current phase #####
   {% elif phase == 1 %}
      ##### find minimum and maximum angles #####
      M118 // Phase 1: last_query = {query} angle={angle} state={state}
      {% set distance = (state.min_trig - state.max_open)|abs %}
      M118 dis={distance} lim={limit})
      {% if distance <= limit %}
         {% set null = state.update({'max_open': state.max_open - limit}) %}
         M118 // CALIBRATION LIMIT query = {query} angle={angle} state={state|pprint}
         #SAVE_VARIABLE VARIABLE=nozzle_lift_state VALUE="{state|pprint}"
         #SET_GCODE_VARIABLE MACRO=ACTIVATE_PROBE VARIABLE=state VALUE="{state}"
         #SET_NOZZLE_LIFT ANGLE={state.max_open}
         {% set phase = 2 %}
      {% elif query == 1 %}  # probe triggered
         {% set null = state.update({'min_trig': angle}) %}
         #{% set null = state.update({'min_trig': ((angle + state.min_trig) / 2)|int}) %}
         {% set angle = ((angle + state.max_open) / 2)|int %}
         ##{% set null = state.update({'min_trig': [state.min_trig,angle]|min}) %}
      {% else %}  
         {% set null = state.update({'max_open': angle|int}) %}
         #{% set null = state.update({'max_open': ((angle + state.max_open) / 2)|int}) %}
         {% set null = state.update({'min_open': (angle/2)|int}) %}
         {% set angle = ((angle + state.min_trig) / 2)|int %}
         ##{% set null = state.update({'max_open': [state.max_open,angle]|max}) %}
      {% endif %}

   {% elif phase == 2 %}
      ##### Test ACTIVATE_PROBE and adjust angle if necessary #####
         M118 // Phase 2: {state.max_open|int} angle={angle|int} query={query}
      {% if query == 1 %}  # probe triggered, reduce angle and return to phase 1
         {% set angle = state.min_open|int %}
         {% set phase = 1 %}
         #{% set null = state.update({'max_open': ((angle + state.max_open) / 2)|int}) %}
         {% set null = state.update({'max_open': angle|int}) %}
      {% else %}
         {% set phase = 0 %}
         M118 // FINAL STATE angle={angle} max_open={state.max_open}
         SAVE_VARIABLE VARIABLE=nozzle_lift_state VALUE="{state|pprint}"
         SET_GCODE_VARIABLE MACRO=ACTIVATE_PROBE VARIABLE=state VALUE="{state}"
         SET_NOZZLE_LIFT ANGLE={state.max_open}
      {% endif %}
   {% else %}
      ##### No phase is running ##### 
      {% set running = 0 %}
   {% endif %}
   
   ##M118 // {state | pprint}
   SET_GCODE_VARIABLE MACRO=NOZZLE_LIFT_CALIBRATE VARIABLE=angle VALUE={angle|int}
   SET_GCODE_VARIABLE MACRO=NOZZLE_LIFT_CALIBRATE VARIABLE=state VALUE="{state}"
   SET_GCODE_VARIABLE MACRO=NOZZLE_LIFT_CALIBRATE VARIABLE=phase VALUE={phase|int}

   #SET_NOZZLE_LIFT ANGLE={state.min_open}
   SET_NOZZLE_LIFT ANGLE=0
   SET_NOZZLE_LIFT ANGLE={angle|int}
   #QUERY_PROBE
   UPDATE_DELAYED_GCODE ID=NOZZLE_LIFT_LOOP DURATION={running}
   

[gcode_macro T0]
gcode:
   LOWER_NOZZLE
