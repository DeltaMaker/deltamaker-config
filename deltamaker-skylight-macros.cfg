# SkyLight
# LED Status Display
# Date: 1/12/2023
#
# Filename: deltamaker-skylight-macros.cfg
# Description: Uses display templates to control LEDs based on system status or state
#
# Requires: previously defined [neopixel status_leds]
#
# Enable or Disable the LEDs
#   SKYLIGHT ENABLE=0 or 1
# Set brightness level
#   SKYLIGHT LEVEL=1 to 10

[gcode_macro SKYLIGHT]
gcode:
   {% set svv = printer.save_variables.variables %}
   {% set bright = svv.get("skylight_brightness", 0) %}
   {% for p in params %}
      {% if p == 'ENABLE' %}
         {% if params[p]|int > 0 %}
            SAVE_VARIABLE VARIABLE=skylight_enabled VALUE=1
            SET_LED_TEMPLATE LED=status_leds TEMPLATE=""
            SET_LED LED=status_leds RED={bright} GREEN={bright} BLUE={bright}
            SET_GCODE_VARIABLE MACRO=SELECT_STATUS_LEDS VARIABLE=last_state VALUE="None"
         {% else %}
            SAVE_VARIABLE VARIABLE=skylight_enabled VALUE=0
            SET_LED_TEMPLATE LED=status_leds TEMPLATE=""
            SET_LED LED=status_leds RED=0 GREEN=0 BLUE=0
         {% endif %}
      {% elif p == 'LEVEL' %}
         {% set lev = params[p]|float %}
         {% set b = lev * lev / 250.0 %}
         SAVE_VARIABLE VARIABLE=skylight_brightness VALUE={'%0.4f'|format(b)}
      {% elif p == 'BLUE' %}
         SET_LED_TEMPLATE LED=status_leds TEMPLATE=""
         SET_LED LED=status_leds RED=0 GREEN=0 BLUE={bright}
      {% elif p == 'WHITE' %}
         SET_LED_TEMPLATE LED=status_leds TEMPLATE=""
         SET_LED LED=status_leds RED={bright} GREEN={bright} BLUE={bright}
      {% endif %}
   {% endfor %}

[gcode_macro NEOPIXEL_DISPLAY]
gcode:
   {% set led = params.LED|default('status_leds') %}
   {% set type = params.TYPE|default('clear') %}
   {% set mode = params.MODE|default('none') %}
   {% set my_neopixel = printer.configfile.config['neopixel ' ~ led] %}
   {% set chain_count = my_neopixel.chain_count|int %}
   {% set tmpl = 'get_' ~ type %}
   {% set led_mode = 'led_' ~ mode %}
   M118 mode = {led_mode} ratio_tmpl = {tmpl} chain_count = {chain_count}

   {% if mode == 'progress' %}
       {% for i in range(chain_count) %}
           SET_LED_TEMPLATE LED={led} INDEX={i+1} TEMPLATE={'led_progress'} param_led_num={i+1} param_led_total={chain_count} param_ratio_tmpl="\"{tmpl}\""
       {% endfor %}

   {% elif mode == 'glow' %}
       SET_LED_TEMPLATE LED={led} TEMPLATE={'led_glow'} param_ratio_tmpl="\"{tmpl}\""
   {% endif %}
   
#
##### LED PROGRESS BAR #####
# ratio is indicated by the number of LEDs lit
#
[display_template led_progress]
param_led_num:  0
param_led_total: 1
param_ratio_tmpl: "get_"
text:
   {% set svv = printer.save_variables.variables %}
   {% set intensity = svv.get("skylight_enabled", 0)|float * svv.get("skylight_brightness", 0)|float %}
   {% set ratio = render(param_ratio_tmpl)|float %}
   {% set led_ratio = param_led_num|float / param_led_total %}
   {% if ratio > led_ratio %}
       0.0, {intensity}, 0.0, 0.0
   {% else %}
       {intensity}, {intensity}, {intensity}, 0.0
   {% endif %}
#
##### LED GLOW INDICATOR #####
# ratio indicated by fading color from blue to red, with all leds the same color
#
[display_template led_glow]
param_ratio_tmpl: "get_"
text:
   {% set svv = printer.save_variables.variables %}
   {% set intensity = svv.get("skylight_enabled", 0)|float * svv.get("skylight_brightness", 0)|float %}
   {% set ratio = render(param_ratio_tmpl)|float %}
   {% if ratio > 0.01 %}
      {ratio * intensity}, 0.0, {(1-ratio) * intensity}, 0.0
   {% else %}
      {ratio * intensity}, {ratio * intensity}, {ratio * intensity}, 0.0
   {% endif %}

##### RATIO TEMPLATES #####

# Enable M73 gcode
[display_status]

# Return the percent complete as a float 0.0 to 1.0
[display_template get_print_percent]
text:
    { printer.display_status.progress }

# Return ratio of the current temp / target temp
[display_template get_extruder_temp]
text:
    {% if printer.extruder.target > 0.0 %}
        {%  set temp = printer.extruder.target %}
    {% else %}
        {% set temp = printer.configfile.config.extruder.max_temp %}
    {% endif %}
    { printer.extruder.temperature / temp|float }

[display_template get_x_position]
text:
    {% set min_x = -240.0 %}
    {% set max_x = 240.0 %}
    {% set ratio  = (printer.motion_report.live_position.x|float - min_x) / (max_x - min_x) %}
    { 1.0 - ratio }
	
[display_template get_idle_state]
text:
    {% if printer.extruder.temperature > 40.0 %}
        { render("get_extruder_temp")}
    {% else %}
        { 0.01 }
    {% endif %}


##### SKYLIGHT MODE CONTROL #####

[delayed_gcode UPDATE_STATUS_LEDS]
initial_duration: 5
gcode:
   {% set my_neopixel = printer.configfile.config['neopixel status_leds'] %}
   {% if my_neopixel.get("chain_count", 0) > 0 %}
      SELECT_STATUS_LEDS
      UPDATE_DELAYED_GCODE ID=UPDATE_STATUS_LEDS DURATION=5
   {% endif %}

# LED Status Options
# 1. When printing, display progress bar
# 2. When warming up, display temperature indicator
# 3. When idle, display cooldown temperature and dim leds

[gcode_macro SELECT_STATUS_LEDS]
variable_last_state: "None"
gcode:
   {% set printer_state = printer.idle_timeout.state %}
   {% set progress = printer.display_status.progress|float %}
   
   {% if printer_state == "Printing" %}
      # confirm that we are really printing
      {% if progress < 0.01 or printer.extruder.target == 0 %}
         {% set printer_state = "Ready" %}
      {% endif %}
   {% endif %} 

   {% if printer_state != last_state %}
      M118 {last_state} -> {printer_state}
      {% if printer_state == "Printing" %}
         NEOPIXEL_DISPLAY TYPE=print_percent MODE=progress
      {% elif printer_state == "Ready" %}
         NEOPIXEL_DISPLAY TYPE=extruder_temp MODE=glow
      {% elif printer_state == "Idle" %}
         NEOPIXEL_DISPLAY TYPE=idle_state MODE=glow
      {% endif %}
      SET_GCODE_VARIABLE MACRO=SELECT_STATUS_LEDS VARIABLE=last_state VALUE="\"{printer_state}\""
   {% endif %}

